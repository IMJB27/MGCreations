@model IEnumerable<MGCreations.Models.cart>
@using MGCreations.Controllers
@using MGCreations.Models
@{
    ViewBag.Title = "View_Cart";
    ProductController productController = new ProductController();
    decimal total = 0;
    TempData.Keep();
}

<h2>View_Cart</h2>
@if (Model.Count() == 0)
{
    <p> Cart Empty </p>
}
else
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.product.Product_Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product_Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product_Price)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.product.Product_Name)
                </td>
                <td>
                    <input type="number" class="form-control Quantity" value="@item.Product_Quantity" data-id="@item.Cart_ID" id="Quantity" name="Quantityof-@item.product.Product_Name" min="1" max="@productController.Get_Product_Quantity(item.Product_ID)" />

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product_Price)
                </td>

                <td>
                    <a class="btn btn-danger" href="@Url.Action("Delete_Cart", "Cart", new { c_id = item.Cart_ID}) ">&#10008</a>
                </td>

            </tr>
        }

    </table>



    using (Html.BeginForm("Checkout", "Cart", FormMethod.Post))
    {
        @Html.AntiForgeryToken();
        foreach (var item in Model)
        {
            total = total + item.Cart_Total;
        }
        <div>
            Subtotal
            <div id="Sub-Total">@total</div>
        </div>
        <div class="row">
            <div calss="col">
                @{
                    delivery_address delivery_Address = TempData["DeliveryAddress"] as delivery_address;

                    if (delivery_Address == null)
                    {
                        <input type="button" value="Add Delivery Address" class="btn btn-default" onclick="location.href='@Url.Action("Delivery_Address_List", "DeliveryAddress")'" />
                    }
                    else
                    {
                        <label class="control-label">@delivery_Address.Delivery_Address_Line1</label>
                        if (delivery_Address.Delivery_Address_Line2 != null)
                        {
                            <label class="control-label">@delivery_Address.Delivery_Address_Line2</label>
                        }

                        <label class="control-label">@delivery_Address.Delivery_Address_City</label>
                        if (delivery_Address.Delivery_Address_County != null)
                        {
                            <label class="control-label">@delivery_Address.Delivery_Address_County</label>
                        }
                        <label class="control-label">@delivery_Address.Delivery_Address_Country</label>
                        <label class="control-label">@delivery_Address.Delivery_Address_Postcode</label>
                    }
                }
            </div>

            <div calss="col">
                @{
                    billing_address billing_Address = TempData["BillingAddress"] as billing_address;

                    if (billing_Address == null)
                    {
                        <input type="button" value="Add Billing Address" class="btn btn-default" onclick="location.href='@Url.Action("Billing_Address_List", "BillingAddress")'" />
                    }
                    else
                    {
                        <label class="control-label">@billing_Address.Billing_Address_Line1</label>
                        if (billing_Address.Billing_Address_Line2 != null)
                        {
                            <label class="control-label">@billing_Address.Billing_Address_Line2</label>
                        }

                        <label class="control-label">@billing_Address.Billing_Address_City</label>
                        if (billing_Address.Billing_Address_County != null)
                        {
                            <label class="control-label">@billing_Address.Billing_Address_County</label>
                        }
                        <label class="control-label">@billing_Address.Billing_Address_Country</label>
                        <label class="control-label">@billing_Address.Billing_Address_Postcode</label>
                    }
                }
            </div>
        </div>

       if((TempData["DeliveryAddress"]!=null)&&(TempData["BillingAddress"] != null))
       { 
        <input type="submit" value="Place Order" class="btn btn-success" />
       }
    }

}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    $(function () {
        $(".Quantity").change(function () {
            var cart_id = $(this).attr("data-id");
            var quantity = $(this).val();
            if (cart_id != null) {
                if (quantity <= 0) {
                    $.post("/Cart/Delete_Cart", { "c_id": cart_id },

                    );
                }
                else {
                    $.post("/Cart/Update_Cart", { "c_id": cart_id, "quantity": quantity },
                        function (data) {
                            $('#Sub-Total').text(data.Subtotal);
                        }
                    );
                }

            }
        });
    });
</script>